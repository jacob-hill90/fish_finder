# Generated by Django 4.1 on 2022-08-29 22:39

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import fish_finder_app.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AppUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=255, verbose_name='email address')),
                ('username', models.CharField(max_length=100, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('zipcode', models.CharField(max_length=11)),
                ('state', models.CharField(max_length=2)),
                ('profile_picture', models.ImageField(null=True, upload_to=fish_finder_app.models.profile_upload_path)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='FishDB',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('latin_name', models.CharField(max_length=100)),
                ('fish_record', models.CharField(max_length=100, null=True)),
                ('fish_docs', models.TextField()),
                ('fish_pic', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CatchData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('season', models.CharField(max_length=20)),
                ('species', models.CharField(max_length=100)),
                ('weight', models.CharField(max_length=60, null=True)),
                ('fishing_method', models.CharField(max_length=100)),
                ('length', models.CharField(max_length=60, null=True)),
                ('depth', models.PositiveIntegerField(null=True)),
                ('latitude', models.CharField(max_length=30, null=True)),
                ('longitude', models.CharField(max_length=30, null=True)),
                ('catch_picture', models.ImageField(null=True, upload_to=fish_finder_app.models.fish_upload_path)),
                ('notes', models.TextField(null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='catches', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
